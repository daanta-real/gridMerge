/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    id 'application' // Apply the application plugin to add support for building a CLI application in Java.
}
application {
    mainClass.set("gridImage.Main")
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {

    // 로깅 어노테이션을 쓰기 위한 롬복
    // LOMBOK은 사용 전제조건이 까다로우므로 사용 시 주의.
    // 1. 어떤 롬복을 어떤 타겟에 implement(release/dev 모두) 최신판의 버전 숫자를 필히 명기해줘야 한다.
    // 2. 반드시 Annotation Processor를 활성해줘야 한다.
    //  1) 밑에처럼 annotationProcessor 형식의 dependency도 추가로 선언해 줘야 함
    //  2) Settings > Build, Execution, Depolyment > Compiler > Annotation Processors
    //     > Enable annotation processing 에 체크해야 함
    // 3. testAnnotationPrcessor를 같이 써주지 않으면, 자바 버전을 내렸을 때 에러를 뿜는 경우가 있어서 써주는 것이 좋다.
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    implementation 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

    // 로깅 라이브러리
    // api 'org.apache.utils.logging.log4j:log4j-core' <<< 안쓸려고..
    // 1. Bridge
    // https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j
    implementation 'org.slf4j:jcl-over-slf4j:latest.integration'
    // 2. Slf4j API
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:latest.integration'
    // 3. Binding
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation 'ch.qos.logback:logback-classic:latest.integration'
    // 4. Slf4j's implemented object (=logback)
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
    implementation 'ch.qos.logback:logback-core:latest.integration'

    // JUnit for testing
    implementation platform('org.junit:junit-bom:latest.integration')
    implementation 'org.junit.jupiter:junit-jupiter'

    // JSON 처리 라이브러리 GSON
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:latest.integration'

}
